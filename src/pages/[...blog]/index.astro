---
import i18next, { t, changeLanguage } from "i18next"
import { localizePath } from "astro-i18next"
import Base from "@layouts/Base.astro"
import { getCollection } from "astro:content"

export function getStaticPaths() {
  return i18next.languages.map((lang) => {
    return {
      params: {
        blog: lang === "zh" ? "blog" : `${lang}/blog`,
      },
      props: {
        lang,
      },
    }
  })
}

const { lang } = Astro.props
changeLanguage(lang)

const posts = (
  await getCollection("blog", ({ id }) => {
    return id.startsWith(`${lang}/`)
  })
)
  .sort((a, b) => b.data.createdAt.valueOf() - a.data.createdAt.valueOf())
  .map((post) => {
    return {
      ...post,
      slug: post.slug.split("/")[1],
    }
  })
---

<Base>
  <ul class="flex flex-col gap-8 mt-4">
    {
      posts.map((post) => (
        <li class="flex justify-center">
          <a
            href={localizePath(`/blog/${post.slug}`)}
            class="card lg:card-side bg-base-100 shadow-2xl w-4/5 min-w-xs"
          >
            {post.data.heroImage && (
              <figure>
                <img
                  src={post.data.heroImage}
                  alt={post.data.title}
                  width="360"
                />
              </figure>
            )}
            <div class="card-body">
              <h2 class="card-title">{post.data.title}</h2>
              <div class="flex gap-8">
                <p class="prose-sm prose-neutral">
                  {t("updated-at")}
                  {new Date(
                    post.data.updatedAt ?? post.data.createdAt
                  ).toLocaleDateString()}
                </p>
                <div class="flex gap-2">
                  {(post.data.tags ?? []).map((tag: string) => (
                    <div class="badge badge-outline">{tag}</div>
                  ))}
                </div>
              </div>
              <p set:html={post.data.description} />
            </div>
          </a>
        </li>
      ))
    }
  </ul>
</Base>
